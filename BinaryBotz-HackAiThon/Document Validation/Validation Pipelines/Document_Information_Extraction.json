{
  "name": "Document Information Extraction",
  "nodes": [
    {
      "parameters": {
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1340,
        -120
      ],
      "id": "260413d8-021c-4fff-a7c0-134b2d997214",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "model": "gemma3:12b",
        "options": {
          "temperature": 1,
          "keepAlive": "0",
          "lowVram": false,
          "mainGpu": 0,
          "numGpu": 1,
          "useMLock": false,
          "useMMap": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        220,
        -60
      ],
      "id": "233bd1a4-6f22-4fb6-83d9-8bf16a8d06bb",
      "name": "Gemma 3",
      "credentials": {
        "ollamaApi": {
          "id": "dqxXNIxOVO2jjWdj",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Predefine Prompts').item.json.body.doc_type }}",
                    "rightValue": "death_certificate",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "10ef91ae-63d3-432d-8964-8edb7f809606"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DC"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "12584847-0ea3-4751-8d18-6e6dc58053d3",
                    "leftValue": "={{ $('Predefine Prompts').item.json.body.doc_type }}",
                    "rightValue": "post_mortem",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PMR"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "none"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        560,
        -260
      ],
      "id": "a5422f2f-50ec-4d12-8da6-04db29418d51",
      "name": "Document Classifier"
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"full_name\": { \"type\": \"string\" },\n    \"birth_date\": { \"type\": \"string\" },\n    \"age_at_death\": { \"type\": \"string\" },\n    \"gender\": { \"type\": \"string\" },\n    \"death_date\": { \"type\": \"string\" },\n    \"death_location\": { \"type\": \"string\" },\n    \"death_cause\": { \"type\": \"string\" },\n    \"parent_father\": { \"type\": \"string\" },\n    \"parent_mother\": { \"type\": \"string\" },\n    \"spouse_name\": { \"type\": \"string\" },\n    \"residence_address\": { \"type\": \"string\" },\n    \"authority_issuer\": { \"type\": \"string\" },\n    \"region_state\": { \"type\": \"string\" },\n    \"region_district\": { \"type\": \"string\" },\n    \"registration_number\": { \"type\": \"string\" },\n    \"registration_date\": { \"type\": \"string\" },\n    \"certificate_number\": { \"type\": \"string\" },\n    \"certification_date\": { \"type\": \"string\" },\n    \"certified_by\": { \"type\": \"string\" },\n    \"certifier_title\": { \"type\": \"string\" },\n    \"nationality\": { \"type\": \"string\" },\n    \"occupation\": { \"type\": \"string\" },\n    \"marital_status\": { \"type\": \"string\" },\n    \"date_of_birth\": { \"type\": \"string\" }\n  },\n  \"required\": []\n}",
        "options": {
          "systemPromptTemplate": "You are an expert extraction algorithm. Your task is to extract specific information from the provided death certificate text and output it in JSON format according to the schema provided. Only extract the information explicitly mentioned in the text. If a field is not present, do not include it in the output—do not make assumptions or add missing information. Ensure the output is a valid JSON object."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        840,
        -360
      ],
      "id": "e458ab66-2470-46e8-9570-b14cf7eca17c",
      "name": "DC Information Extractor"
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"full_name\": { \"type\": \"string\" },\n    \"age_at_death\": { \"type\": \"string\" },\n    \"gender\": { \"type\": \"string\" },\n    \"death_date\": { \"type\": \"string\" },\n    \"death_time\": { \"type\": \"string\" },\n    \"death_location\": { \"type\": \"string\" },\n    \"death_cause\": { \"type\": \"string\" },\n    \"autopsy_date\": { \"type\": \"string\" },\n    \"autopsy_time\": { \"type\": \"string\" },\n    \"pathologist_name\": { \"type\": \"string\" },\n    \"organ_findings\": { \"type\": \"string\" },\n    \"toxicology_results\": { \"type\": \"string\" },\n    \"manner_of_death\": { \"type\": \"string\" },\n    \"external_examination\": { \"type\": \"string\" },\n    \"internal_examination\": { \"type\": \"string\" },\n    \"medical_history\": { \"type\": \"string\" },\n    \"residence_address\": { \"type\": \"string\" },\n    \"authority_issuer\": { \"type\": \"string\" },\n    \"region_state\": { \"type\": \"string\" },\n    \"region_district\": { \"type\": \"string\" },\n    \"report_number\": { \"type\": \"string\" },\n    \"report_date\": { \"type\": \"string\" },\n    \"nationality\": { \"type\": \"string\" },\n    \"occupation\": { \"type\": \"string\" },\n    \"bought_by\": { \"type\": \"string\" },\n    \"requested_by\": { \"type\": \"string\" },\n    \"identified_by\": { \"type\": \"string\" },\n    \"identification_method\": { \"type\": \"string\" },\n    \"body_condition\": { \"type\": \"string\" },\n    \"time_of_death_estimated\": { \"type\": \"string\" },\n    \"injury_details\": { \"type\": \"string\" },\n    \"witness_statements\": { \"type\": \"string\" },\n    \"police_case_number\": { \"type\": \"string\" },\n    \"coroner_inquest\": { \"type\": \"string\" },\n    \"histopathology_results\": { \"type\": \"string\" },\n    \"microbiology_results\": { \"type\": \"string\" },\n    \"radiology_findings\": { \"type\": \"string\" },\n    \"photographic_evidence\": { \"type\": \"string\" },\n    \"evidence_collected\": { \"type\": \"string\" },\n    \"body_disposition\": { \"type\": \"string\" },\n    \"additional_remarks\": { \"type\": \"string\" }\n  },\n  \"required\": []\n}",
        "options": {
          "systemPromptTemplate": "You are an expert extraction algorithm. Your task is to extract specific information from the provided post mortem report text and output it in JSON format according to the schema provided. Only extract the information explicitly mentioned in the text. If a field is not present, do not include it in the output—do not make assumptions or add missing information. Ensure the output is a valid JSON object."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        900,
        -180
      ],
      "id": "17ef1a0e-5aa6-4805-bb08-1ef5da793e4a",
      "name": "PMR Information Extractor"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "post-input",
        "responseMode": "responseNode",
        "options": {
          "binaryPropertyName": "file"
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -420,
        -200
      ],
      "id": "85b8d8ea-2704-4b0d-bce7-3e39f18db93e",
      "name": "Webhook",
      "webhookId": "d2471bf2-23d8-4ed7-9f62-fda415883a2c"
    },
    {
      "parameters": {
        "operation": "resize",
        "dataPropertyName": "file0",
        "width": 896,
        "height": 896,
        "resizeOption": "minimumArea",
        "options": {
          "fileName": "resized",
          "format": "png"
        }
      },
      "type": "n8n-nodes-base.editImage",
      "typeVersion": 1,
      "position": [
        -200,
        -280
      ],
      "id": "7e366558-44f6-47fd-88ae-b53bfbbcec87",
      "name": "Preprocessing"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.prompts.find(p => p.doc_type === $json.body.doc_type)[`${$json.body.doc_type}_prompt`] }}",
        "options": {
          "passthroughBinaryImages": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        180,
        -260
      ],
      "id": "777d2792-25b7-4d6c-96c3-590d1b7b8a02",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "llama3.1:latest",
        "options": {
          "temperature": 1,
          "keepAlive": "0",
          "useMLock": false,
          "useMMap": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        740,
        -40
      ],
      "id": "8440b5e9-8595-4c74-915f-bb9f990878af",
      "name": "Llama 3.1",
      "credentials": {
        "ollamaApi": {
          "id": "dqxXNIxOVO2jjWdj",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "093596de-2811-4e98-9495-b48609c7fa1e",
              "name": "prompts",
              "value": "={{[   {     \"doc_type\": \"death_certificate\",     \"death_certificate_prompt\": \"You are an AI agent assigned to meticulously extract all available information from the provided death certificate image, including even the smallest details. Ensure nothing is missed.\"   },   {     \"doc_type\": \"post_mortem\",     \"post_mortem_prompt\": \"You are an AI agent tasked with extracting only the information that is clearly present in the provided post-mortem report image.Carefully analyze the image and extract all visible and explicitly mentioned details. Do not infer or assume any information that is not clearly stated in the document. Ensure accuracy and completeness, while strictly avoiding any hallucinated or fabricated content.\"   } ]}}",
              "type": "object"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {
          "ignoreConversionErrors": true
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -20,
        -280
      ],
      "id": "9e37695f-ab5f-44b7-a412-cff45ebbc9ec",
      "name": "Predefine Prompts"
    }
  ],
  "pinData": {},
  "connections": {
    "Gemma 3": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Document Classifier": {
      "main": [
        [
          {
            "node": "DC Information Extractor",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "PMR Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DC Information Extractor": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PMR Information Extractor": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Preprocessing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preprocessing": {
      "main": [
        [
          {
            "node": "Predefine Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Document Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Llama 3.1": {
      "ai_languageModel": [
        [
          {
            "node": "PMR Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "DC Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Predefine Prompts": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Kolkata",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "8f414633-a833-4984-8d91-603efb5656c5",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a55d14e2824e9cad12b17599633dfd15bb15090e9dab8d3e5c0f5afebe149601"
  },
  "id": "kXMCOJVrQQLE2J15",
  "tags": []
}